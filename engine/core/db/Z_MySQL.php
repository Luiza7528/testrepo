<?phprequire_once  __DIR__."/../../config/db.php";error_reporting(E_ALL);class Z_MySQL{    /* @var mysqli connection */    private $connection;    private $last_error;    /**     * Z_MySQL constructor.     * @brief connect to MySQL     */    function __construct()    {        $this->last_error = 0;        $this->connection = new \mysqli(DB_HOST, DB_USER, DB_PASS, DB_NAME);        if (!$this->connection) {            $this->last_error = "Error: Can't connect to MySQL. ErrNo" . mysqli_connect_errno() . " - " . mysqli_connect_error();        }        $this->connection->set_charset('utf8');    }    /**     * Z_MySQL destructor.     * @brief disconnect from MySQL     */    function __destruct()    {        $this->connection->close();    }    /**     * Return var dump from connection     * @return string     */    function __toString(): string    {        return $this->connection->info;    }    /**     * For no-DML query (not INSERT, UPDATE or DELETE)     * @param   $query      String  Query string     * @return  array  sql answer     */     function queryNoDML(string $query): array    {        $result = $this->connection->query($query);        $answer = [];        if ($result) {            if ($result->num_rows > 0) {                while ($row = $result->fetch_assoc()) {                    $answer[] = $row;                }            }            return $answer;        }        return $answer;    }    /**     * For DML query (not INSERT, UPDATE or DELETE)     * @param $query      String  Query string     * @return bool|mysqli_result     */     function queryDML(string $query)    {        return $this->connection->query($query);//        if ($this->connection->affected_rows > 0) {//            return $this->connection->affected_rows;//        }//        return false;    }    /**     * Return last error     * @return string     */     function lastError()    {        return $this->last_error;    }    /**     * Return last inserted id from MySQL     * @return  int|bool     */    public function lastID()    {        return $this->connection->insert_id;    }    /**     * Return current date and time from MySQL     * @return  bool|mysqli_result     */    protected function getNow()    {        return $this->queryNoDML("SELECT NOW() AS 'time';")[0]['time'];    }}